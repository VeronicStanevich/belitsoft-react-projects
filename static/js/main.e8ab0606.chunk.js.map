{"version":3,"sources":["store/reducers/favorite.ts","store/reducers/teams.ts","store/reducers/favirotePlayers.ts","store/reducers/selectedTeam.ts","store/reducers/index.ts","store/middlewares/index.ts","store/middlewares/persistantState.ts","store/index.ts","store/actions/players.ts","api/squad.ts","components/squad.tsx","components/user/user.tsx","api/teams.ts","components/teams/teams.tsx","store/actions/teams.ts","index.tsx"],"names":["ActionType","combinedReducer","combineReducers","favoriteTeams","teams","action","type","ADD","find","id","value","REMOVE","filter","favoritePlayers","players","player","playerId","state","SET","selectedTeamPlayers","SET_SELECTED_TEAM","middlewareEnhancer","applyMiddleware","thunk","storeAPI","next","result","localStorage","setItem","JSON","stringify","getState","preloadedState","parse","getItem","store","createStore","loadPlayers","dispatch","headers","Headers","append","fetch","method","then","res","json","squad","fetchTeamSquad","String","Squad","props","useSelector","useDispatch","React","useEffect","team","map","className","name","onClick","teamId","User","palyer","getTeams","fetchTeams","responseJSON","catch","alert","Teams","useState","userPage","setUserPage","selectedTeam","setSelectedTeam","event","preventDefault","stopPropagation","href","alt","src","crestUrl","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8ab0606.chunk.js","sourcesContent":["import {ITeam} from \"../../interfaces\";\n\nenum ActionType {\n    ADD = 'favorite/add',\n    REMOVE = 'favorite/remove'\n}\n\ninterface IAddTeamAction {\n    type: ActionType.ADD,\n    value: ITeam\n}\n\ninterface IRemoveTeamAction {\n    type: ActionType.REMOVE,\n    value: number\n}\n\ntype IFavoriteTeamReducer = IAddTeamAction | IRemoveTeamAction;\n\nexport function favoriteTeamsReducer(teams = [], action: IFavoriteTeamReducer) {\n    switch (action.type) {\n        case ActionType.ADD:\n            if (teams.find(({id}) => id === action.value.id)) {\n                return teams;\n            }\n\n            return [...teams, action.value];\n        case ActionType.REMOVE:\n            return teams.filter(({id}) => id !== action.value);\n        default:\n            return teams;\n    }\n}","import {ITeam} from \"../../interfaces\";\n\nenum ActionType {\n    SET = 'teams'\n}\n\ninterface ISetTeams {\n    type: ActionType,\n    value: ITeam[]\n}\n\nexport function teamsReducer(state = [], action: ISetTeams) {\n    switch (action.type) {\n        case ActionType.SET:\n            return action.value;\n        default:\n            return state;\n    }\n}\n\n","import {IFavoritePlayer} from \"../../interfaces\";\n\nenum ActionType {\n    ADD = 'favorite-player/add',\n    REMOVE = 'favorite-player/remove'\n}\n\ninterface IFavoritePlayerActionDeleteAction {\n    type: ActionType.REMOVE,\n    value: number\n}\n\ninterface IFavoritePlayerActionAddAction {\n    type: ActionType.ADD,\n    value: IFavoritePlayer\n}\n\ntype IFavoritePlayerAction = IFavoritePlayerActionAddAction | IFavoritePlayerActionDeleteAction;\n\nexport function favoritePlayersReducer(players: IFavoritePlayer[] = [], action: IFavoritePlayerAction) {\n    switch (action.type) {\n        case ActionType.ADD:\n            const player = action.value as IFavoritePlayer;\n\n            if (players.find(({id}) => id === player.id)) {\n                return players;\n            }\n\n            return [...players, action.value];\n        case ActionType.REMOVE:\n            const playerId = action.value as number;\n\n            return players.filter(({id}) => id !== playerId);\n        default:\n            return players;\n    }\n}","import {IPlayer} from \"../../interfaces\";\n\nenum ActionType {\n    SET_SELECTED_TEAM = 'selected-team'\n}\n\ninterface ISetActionType {\n    type: ActionType.SET_SELECTED_TEAM,\n    value: IPlayer[]\n}\n\nexport function selectedTeamReducer(players: IPlayer[] = [], action: ISetActionType) {\n    switch (action.type) {\n        case ActionType.SET_SELECTED_TEAM:\n            return action.value;\n        default:\n            return players;\n    }\n}\n\n","import {combineReducers} from \"redux\";\nimport {favoriteTeamsReducer} from \"./favorite\";\nimport {teamsReducer} from \"./teams\";\nimport {favoritePlayersReducer} from \"./favirotePlayers\";\nimport {selectedTeamReducer} from \"./selectedTeam\";\n\nexport const combinedReducer = combineReducers({\n    favoriteTeams: favoriteTeamsReducer,\n    favoritePlayers: favoritePlayersReducer,\n    teams: teamsReducer,\n    selectedTeamPlayers: selectedTeamReducer\n});\n\n","import {applyMiddleware} from \"redux\";\nimport thunk from 'redux-thunk';\nimport {localstorageMiddleware} from \"./persistantState\";\n\nexport const middlewareEnhancer = applyMiddleware(thunk, localstorageMiddleware);\n","import { Middleware } from \"redux\";\n\nexport const localstorageMiddleware: Middleware = (storeAPI) =>\n    (next) =>\n        (action) => {\n            let result = next(action)\n            localStorage.setItem('store-state', JSON.stringify(storeAPI.getState()));\n            return result\n        };","import {createStore} from 'redux'\nimport {combinedReducer} from \"./reducers\";\nimport {middlewareEnhancer} from \"./middlewares\";\nimport {IFavoritePlayer, IPlayer, ITeam} from \"../interfaces\";\n\nconst preloadedState = JSON.parse(localStorage.getItem('store-state') || '') || {};\n\nconst store = createStore(combinedReducer, preloadedState, middlewareEnhancer);\n\nexport default store;\n\nexport interface IState {\n    favoriteTeams: ITeam[],\n    favoritePlayers: IFavoritePlayer[],\n    teams: ITeam[],\n    selectedTeamPlayers: IPlayer[]\n}\n","import {fetchTeamSquad} from \"../../api/squad\";\nimport {Dispatch} from \"react\";\n\nexport function loadPlayers(id: number) {\n    return function (dispatch: Dispatch<unknown>) {\n        return fetchTeamSquad(String(id)).then(squad => {\n            dispatch({type: 'selected-team', value: squad});\n        });\n    };\n}","import {IPlayer} from \"../interfaces\";\n\nexport const fetchTeamSquad = (id: string): Promise<IPlayer[]> => {\n    const headers = new Headers();\n    headers.append('X-Auth-Token', 'f113f557ce2a428e8a46dc9e659212f8');\n\n    return fetch(`https://api.football-data.org/v2/teams/${id}`, {\n        method: 'GET',\n        headers: headers\n    })\n        .then(res => res.json())\n        .then(({squad}) => squad);\n}","import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loadPlayers} from \"../store/actions/players\";\nimport {IState} from \"../store\";\nimport {IFavoritePlayer, IPlayer, ITeam} from \"../interfaces\";\n\ninterface IProps {\n    team: ITeam\n}\n\nexport const Squad: React.FunctionComponent<IProps> = props => {\n    const players = useSelector<IState, IPlayer[]>(state => state.selectedTeamPlayers);\n    const favoritePlayers = useSelector<IState, IFavoritePlayer[]>(({favoritePlayers}) => favoritePlayers);\n    const dispatch = useDispatch();\n\n    React.useEffect(() => {\n        dispatch(loadPlayers(props.team.id));\n\n        return () => {\n            dispatch({type: 'selected-team', value: []})\n        };\n    }, []);\n\n    return (\n        <>\n            {players.map(player => (\n                <div key={player.id}\n                     className={`${favoritePlayers.find(({id}) => id === player.id) ? 'team__card_favorite' : ''}`}>\n                    <p>{player.name}</p>\n                    <button onClick={() => {\n                        dispatch({\n                            type: 'favorite-player/add', value: {\n                                id: player.id, player: player.name, teamId: props.team.id\n                            }\n                        });\n                    }}>add player\n                    </button>\n                    <button onClick={() => {\n                        dispatch({type: 'favorite-player/remove', value: player.id});\n                    }}>remove player\n                    </button>\n                </div>\n            ))}\n        </>\n    );\n}","import {useSelector} from \"react-redux\";\nimport {IFavoritePlayer, ITeam} from \"../../interfaces\";\nimport {IState} from \"../../store\";\nimport {FunctionComponent} from \"react\";\n\nexport const User: FunctionComponent = () => {\n    const teams = useSelector<IState, ITeam[]>(state => state.favoriteTeams);\n    const favoritePlayers = useSelector<IState, IFavoritePlayer[]>(state => state.favoritePlayers);\n\n    return (\n        <>\n            {teams.map((team) => {\n                const players = favoritePlayers.filter(({teamId}) => teamId === team.id);\n\n                return (\n                    <div key={team.id}>\n                        <h3>{team.name}</h3>\n                        <ul>\n                            {players.map((palyer) => {\n                                return (\n                                    <li key={palyer.id}>{palyer.player}</li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                );\n            })}\n        </>\n    );\n};","import {ITeam} from \"../interfaces\";\n\nconst fetchTeams = () => {\n    const headers = new Headers();\n    headers.append('X-Auth-Token', 'f113f557ce2a428e8a46dc9e659212f8');\n\n    return fetch('https://api.football-data.org/v2/teams', {\n        method: 'GET',\n        headers: headers\n    })\n        .then(res => res.json())\n}\n\nexport function getTeams(): Promise<ITeam[]> {\n    return fetchTeams()\n        .then(responseJSON => responseJSON.teams)\n        .catch(alert);\n}\n","import React, {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Squad} from \"../squad\";\nimport {User} from \"../user/user\";\nimport {loadTeams} from \"../../store/actions/teams\";\nimport {ITeam} from \"../../interfaces\";\nimport {IState} from \"../../store\";\n\nexport const Teams: React.FunctionComponent = () => {\n    const favoriteTeams = useSelector<IState, ITeam[]>(state=> state.favoriteTeams);\n    const teams = useSelector<IState, ITeam[]>(state => state.teams);\n    const dispatch = useDispatch();\n    const [userPage, setUserPage] = useState(false);\n    const [selectedTeam, setSelectedTeam] = useState<ITeam | null>(null);\n\n    React.useEffect(() => {\n        dispatch(loadTeams());\n    }, []);\n\n    if (userPage) {\n        return (\n            <div>\n                <button onClick={() => setUserPage(false)}>Back</button>\n                <User/>\n            </div>\n        );\n    }\n\n    if (selectedTeam) {\n        return (\n            <div>\n                <button onClick={() => {\n                    setSelectedTeam(null);\n                }}>Reset team selection\n                </button>\n                <Squad team={selectedTeam}/>\n            </div>);\n    }\n\n    return (\n        <div className=\"teams\">\n            <button onClick={() => {\n                setUserPage(true);\n            }}>Go to user\n            </button>\n            {teams.map((team) => (\n                <div key={team.id}\n                     className={`team__card ${favoriteTeams.find(({id}) => id === team.id) ? 'team__card_favorite' : ''}`}\n                     onClick={(event) => {\n                         event.preventDefault();\n                         setSelectedTeam(team);\n                     }}>\n                    <button className=\"team__add_to_favourite\" onClick={(event) => {\n                        event.stopPropagation();\n                        dispatch({type: 'favorite/add', value: {id: team.id, name: team.name}})\n                    }}>add to favorite\n                    </button>\n                    <button className=\"team__remove_from_favourite\" onClick={(event) => {\n                        event.stopPropagation();\n                        dispatch({type: 'favorite/remove', value: team.id})\n                    }}>remove from favorite\n                    </button>\n                    <a className=\"team__link\" href=\"#\">\n                        <img className=\"team__logo\" alt={team.name} src={team.crestUrl}/>\n                        <p>{team.name}</p>\n                    </a>\n                </div>\n            ))}\n        </div>\n    );\n};\n","import {getTeams} from \"../../api/teams\";\nimport {Dispatch} from \"react\";\n\nexport function loadTeams() {\n    return function (dispatch: Dispatch<unknown>) {\n        return getTeams().then((teams) => {\n            dispatch({type: 'teams', value: teams});\n        })\n    };\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport {Provider} from \"react-redux\";\nimport store from './store';\nimport {Teams} from \"./components/teams/teams\";\n\nimport './teams.css';\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <Teams />\n        </Provider>\n    );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}